// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/douyin/user/register/": {
            "get": {
                "description": "用户登录功能，判断密码是否正确",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "账号",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.UserResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "用户注册，需要判断用户名是否已经被注册了，以及用户密码是否规范",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "type": "string",
                        "description": "账号",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.UserLoginResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.UserLoginResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "$ref": "#/definitions/model.Response"
                },
                "userLoginData": {
                    "$ref": "#/definitions/service.UserLoginData"
                }
            }
        },
        "controller.UserResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "$ref": "#/definitions/model.Response"
                },
                "userInfoData": {
                    "$ref": "#/definitions/service.UserInfoData"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "status_code": {
                    "type": "integer"
                },
                "status_msg": {
                    "type": "string"
                }
            }
        },
        "model.UserInfo": {
            "type": "object",
            "properties": {
                "follow_count": {
                    "type": "integer"
                },
                "follower_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_follow": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.UserInfoData": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.UserInfo"
                }
            }
        },
        "service.UserLoginData": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
